/*
==============================================================================

hosta

==============================================================================
*/

$cd id1/models/hosta3
$scale	0.8
$origin 0 0 24
$base base
$skin base

$frame stand1 stand2 stand3 stand4 stand5 stand6 stand7 stand8 stand9
$frame stand10 stand11 stand12 stand13

$frame walk1 walk2 walk3 walk4 walk5 walk6 walk7 walk8

$frame death1 death2 death3 death4 death5 death6 death7 death8 death9


//============================================================================

void()	hosta_JumpTouch;

void()	hostag_stand1	=[	$stand1,	hostag_stand2	] {ai_stand();};
void()	hostag_stand2	=[	$stand2,	hostag_stand3	] {ai_stand();};
void()	hostag_stand3	=[	$stand3,	hostag_stand4	] {ai_stand();};
void()	hostag_stand4	=[	$stand4,	hostag_stand5	] {ai_stand();};
void()	hostag_stand5	=[	$stand5,	hostag_stand6	] {ai_stand();};
void()	hostag_stand6	=[	$stand6,	hostag_stand7	] {ai_stand();};
void()	hostag_stand7	=[	$stand7,	hostag_stand8	] {ai_stand();};
void()	hostag_stand8	=[	$stand8,	hostag_stand9	] {ai_stand();};
void()	hostag_stand9	=[	$stand9,	hostag_stand10	] {ai_stand();};
void()	hostag_stand10	=[	$stand10,	hostag_stand11	] {ai_stand();};
void()	hostag_stand11	=[	$stand11,	hostag_stand12	] {ai_stand();};
void()	hostag_stand12	=[	$stand12,	hostag_stand13	] {ai_stand();};
void()	hostag_stand13	=[	$stand13,	hostag_stand1	] {ai_stand();};

void()	hostag_walk1	=[	$walk1,		hostag_walk2	] {
if (random() < 0.2)
    sound (self, CHAN_VOICE, "hosta/idle1.wav", 1, ATTN_IDLE);
ai_walk(8);
};
void()	hostag_walk2	=[	$walk2,		hostag_walk3	] {ai_walk(6);};
void()	hostag_walk3	=[	$walk3,		hostag_walk4	] {ai_walk(6);};
void()	hostag_walk4	=[	$walk4,		hostag_walk5	] {ai_walk(7);};
void()	hostag_walk5	=[	$walk5,		hostag_walk6	] {ai_walk(4);};
void()	hostag_walk6	=[	$walk6,		hostag_walk7	] {ai_walk(6);};
void()	hostag_walk7	=[	$walk7,		hostag_walk8	] {ai_walk(10);};
void()	hostag_walk8	=[	$walk8,		hostag_walk1	] {ai_walk(10);};

void(entity attacker, float damage)	hostag_pain =
{
	if (self.touch == hosta_JumpTouch)
		return;

	if (self.pain_finished > time)
		return;

	self.pain_finished = time + 1;
    sound (self, CHAN_VOICE, "hosta/dpain1.wav", 1, ATTN_NORM);

	if (random()*200 > damage)
		return;		// didn't flinch
		
	hostag_pain1 ();
};

void()	hostag_die1		=[	$death1,		hostag_die2	] {
sound (self, CHAN_VOICE, "hosta/ddeath.wav", 1, ATTN_NORM);};
void()	hostag_die2		=[	$death2,		hostag_die3	] {};
void()	hostag_die3		=[	$death3,		hostag_die4	] {};
void()	hostag_die4		=[	$death4,		hostag_die5	] {};
void()	hostag_die5		=[	$death5,		hostag_die6	] {};
void()	hostag_die6		=[	$death6,		hostag_die7	]
{self.solid = SOLID_NOT;};
void()	hostag_die7		=[	$death7,		hostag_die8	] {};
void()	hostag_die8		=[	$death8,		hostag_die9	] {};
void()	hostag_die9		=[	$death9,		hostag_die9 ] {};

void() hosta_die =
{

	hostag_die1 ();
};


void() monster_hostag =
{
	if (deathmatch)
	{
		remove(self);
		return;
	}
	precache_model ("progs/hosta.mdl");
	precache_model ("progs/h_hosta.mdl");

	precache_sound ("hosta/ddeath.wav");
	precache_sound ("hosta/dhit2.wav");
	precache_sound ("hosta/djump.wav");
	precache_sound ("hosta/dpain1.wav");
	precache_sound ("hosta/idle1.wav");
	precache_sound ("hosta/sight2.wav");

	self.solid = SOLID_SLIDEBOX;
	self.movetype = MOVETYPE_STEP;

	setmodel (self, "progs/hosta.mdl");

	setsize (self, VEC_HULL2_MIN, VEC_HULL2_MAX);
	self.health = 300;

	self.th_stand = hostag_stand1;
	self.th_walk = hostag_walk1;
	self.th_run = hostag_run1;
	self.th_die = hosta_die;
	self.th_melee = hosta_MeleeAttack;		// one of two attacks
	self.th_missile = hostag_jump1;			// jump attack
	self.th_pain = hostag_pain;
		
	walkmonster_start();
};




